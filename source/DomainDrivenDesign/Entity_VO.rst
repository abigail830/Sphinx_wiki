Entity vs ValueObject
=================================

参考《领域驱动设计》
---------------------

**第五章总起**
  
  一个对象是用来表示某种具有连续性和标识的食物呢（可以跟踪它所经历的不同状态，甚至可以跨不同的实现跟踪它），还是用于描述某种状态的属性呢？这是ENTITY和VALUE OBJECT之间的根本区别。明确地选择这两种模式之一来定义对象，有利于减少歧义，并帮助我们做出特定的选择，这样才能得到健壮的设计。


**5.2 模式：ENTITY**

  很多对象不是通过他们的属性定义的，而是通过连续性和标识定义的。
  
  Entity可以是任何事物，只要满足两个条件即可，一是它在整个生命周期中具有连续性，而是它的区别并不是由那些对客户非常重要的属性决定的。

**5.3 模式：VALUE OBJECT**
  
  很多对象没有概念上的标识，他们描述了一个事务的某种特征。




参考《DDD 领域驱动设计－三个问题思考实体和值对象》
------------------------------------------------

https://www.cnblogs.com/xishuai/p/ddd-entity-value-object.html

  实体不仅需要知道它是什么？而且还需要知道它是哪个？而值对象只需要知道它是什么？
  


DDD China 2019 大会上的互动例子
----------------------------------

根据生命周期的画图分析

.. image:: https://pic4.zhimg.com/v2-98587689f3c62f1bb495f8f36947c50b_r.jpg

实体因为有生命周期和动作，所以通常以线段出现。而值对象往往出现一次就没其他变化了，所以常常是一个点。但这个得结合多个场景去看，同一个对象在场景A是一个点，但可能在场景B中是线段，那其实它就是一个实体，只不过在场景A的时候，仅需要引用它的某些属性。


例子
------

演唱会
^^^^^^
* 当我们发放的门票上有座位号的时候，座位需要作为独立的实体，座位号是唯一的标识。往往它还会跟买票的人关联，还有持续的生命周期比如已卖出，已入座等。
* 而当mini演唱会先到先座模式下，我们只关心剩余座位数，那么座位号并不是唯一标识，这时候座位就可以作为一个值对象。

人
^^^^
* 一个人染发了还是那个人吗？通常来说是的，因为ID没变，只是属性变了
* 但如果我处在一个场景说统计黄色头发的人数，那我关注的只是头发颜色这个属性，不关注它属于哪个人



