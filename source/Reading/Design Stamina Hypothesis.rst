Design Stamina Hypothesis 
==========================================

.. note::
  **This is article from Martin Fowler** `Design Stamina Hypothesis <https://martinfowler.com/bliki/DesignStaminaHypothesis.html>`_


设计耐力假说
-------------


设计好软件值得吗?
^^^^^^^^^^^^^^^^^

我时常会间接地讨论好的软件设计是否值得进行。我说这些对话是间接的，因为我不认为我曾经遇到过有人说软件设计是毫无意义的。通常是这样表达的:“我们真的需要快速行动，以实现明年的目标，所以我们正在减少 **一些设计活动** "。

有一种观点认为，设计是一种你可以用更快的速度来换取的东西。事实上，我曾经有过这样的印象:设计工作是可以容忍的，以保持程序员的快乐，即使它降低了速度。

如果把精力放在设计上降低了编程的效率，我将反对这种情况。事实上，我认为如果是这样的话，大多数软件开发人员都会反对设计。开发人员可能不同意什么是好的设计，但是他们支持他们喜欢的任何品牌的好设计，因为他们相信它可以提高生产力。(这里的“设计”指的是预先设计或敏捷的方法，即 `计划设计或演进设计 <https://martinfowler.com/articles/designDead.html>`_。)

设计活动当然会花费时间和精力，但它们是有回报的，因为它们使软件更容易发展到未来。你可以通过忽视设计来节省短期时间，但这会累积技术债务，从而降低你以后的工作效率。将精力投入到软件的设计中可以提高项目的持久力，使您可以更快更长的时间。

将其可视化的一种方法是下面的图。

.. image:: ../../images/designStaminaGraph.gif
  :width: 500px


例图为两个假想的原型项目提供了功能(累积的)和时间:一个设计良好，另一个没有设计。不进行设计的项目不需要在设计活动上花费任何精力，无论是前端设计还是敏捷技术。因为不需要在这些活动上花费精力，所以这个项目最初可以更快地生成功能。

“无设计”的问题在于，如果不将精力投入到设计中，代码库就会恶化，并且变得更难修改，这就降低了生产率，也就是一行的梯度。好的设计使它的生产力保持不变，所以在某个时候(设计的回报线)它会超过非设计项目的累积功能，并继续做得更好。

我把这叫做假设，因为它是一个猜想，没有客观的证据证明这种现象确实发生过。从科学的角度来说，这不是一个很好的假设，因为很难验证。我们既不能衡量生产力，也不能衡量设计质量。

尽管这只是一个假设，但对包括我自己在内的许多人来说，这也是一个公理。我们可能没有客观的证据来证明这种效应的发生，但我们中的许多人认为，这解释了我们在该领域所看到的定性现象。这对我来说是一个公理，因为这是支撑我整个软件设计作家生涯的假设。如果设计并不能在某种程度上提高生产力，那么我的大多数作品都是毫无价值的。

我敢肯定，对很多人来说，把假设当作公理听起来很奇怪，但这是一件很常见的事情。我用我的判断来评估假设的真实性，但这样做不会忽视假设的客观弱点。我很想找到一种方法来证明它，并且几乎同样多地反驳它。

这个假设有一个推论，它来自于设计收益线。如果您的初始版本的功能低于设计回报线，那么它可能值得用设计质量来换取速度;但如果它高于这条线，那么这种取舍就是虚幻的。当你的交付超过了设计收益线，忽视设计总是会让你晚些时候交付。从技术债务的角度来看，这就像贷款，但本金没有使用很长时间，当你使用它的时候，你已经支付了更多的利息。

这就提出了这条线在哪里的问题。即使是那些接受设计耐力假说的人，在收益线的位置上也存在着重大而重要的差异。我认为它比大多数人认为的要低得多:通常是几周，而不是几个月。但这只能是一个判断。

这导致了技术债务的后果。技术债务是一个很好的类比，我经常用它。但设计回报线提醒我们，在一定程度上，承担技术债务是值得的。我们不仅要考虑交付的价值是否大于利息支付，我们还必须首先判断交付是否高于支付线。

.. index:: technical debt, martin fowler
